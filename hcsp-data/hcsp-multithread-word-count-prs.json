[{"cursor":"Y3Vyc29yOnYyOpHOErWxkw==","node":{"number":1,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"哈哈，这里为什么不改成lambda表达式？","author":{"login":"blindpirate"},"commit":{"oid":"cc4730d75309e8c35c76f5851575ab041c69ae8c"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":37,"originalLine":37,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOErvDuQ==","node":{"number":2,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOErvIPQ==","node":{"number":3,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEsmnfQ==","node":{"number":4,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEtZbew==","node":{"number":5,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEt1TJw==","node":{"number":6,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEuH5VQ==","node":{"number":7,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"为啥要处理方括号和逗号？我们的文件只包含小写字母和空格啊。。。。","author":{"login":"blindpirate"},"commit":{"oid":"40d159e6a9f17bada5bb88479efef9a1774c1fe5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":46,"originalLine":46,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEuLvzw==","node":{"number":8,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":">  /**\r\n     * Reads a line of text.  A line is considered to be terminated by any one\r\n     * of a line feed ('\\n'), a carriage return ('\\r'), or a carriage return\r\n     * followed immediately by a linefeed.\r\n     *\r\n     * @return     A String containing the contents of the line, not including\r\n     *             any line-termination characters, or null if the end of the\r\n     *             stream has been reached\r\n     *\r\n     * @exception  IOException  If an I/O error occurs\r\n     *\r\n     * @see java.nio.file.Files#readAllLines\r\n     */\r\n    public String readLine() throws IOException {\r\n        return readLine(false);\r\n    }\r\n\r\n谁告诉你文件读完的标志是返回空字符串的？请好好读一读文档，不要想当然。","author":{"login":"blindpirate"},"commit":{"oid":"7842ff3861f48411876fff23d6e3e7ad16e30d15"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":33,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEu1EGg==","node":{"number":9,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这是什么鬼","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":3,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这里如果`files`为空呢？\r\n\r\n```suggestion\r\n            while (!files.isEmpty()) {\r\n```","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"我这样建议只是指出你的问题，并不代表这样改了你的程序就能正常工作了。你最好避免多个子线程同时操作List，原因是：\r\n\r\n1. 你的List没有同步。\r\n2. 你怎么保证List是可以修改的，就调用它的remove方法？\r\n3. 很容易出线程安全问题。","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":32,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"每个子线程执行完就自己把自己的线程池关掉？这个操作很骚啊。","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"虽然你从线程池中的线程里关闭肯定会遇到异常，但是我还是想问，线程1执行完了就把线程池整个关掉，那别的线程要是还在执行咋办？","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":45,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"@blindpirate 老师，我调试到这里的时候，发现就只提示了一个 application is running了。想问下是为什么呢？","author":{"login":"Scott-YuYan"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"你难道没注意到你的电脑CPU负载很高么？所有的线程都在跑死循环啊。。。","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":41,"originalLine":39,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"@blindpirate 这个文件拆分的方法还有些问题","author":{"login":"Scott-YuYan"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"我有没有跟你说过，不要自己造轮子？自己尝试搜索一下有没有类似方法？如果你需要的话，我可以允许你修改`pom.xml`.","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":81,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这个方法的时间复杂度是太高了，最开始的时候我是用files.remove(index)读取list中的文件的，会报出ConcurrentModificationException，尝试了加锁，已经copyOnWriteArrayList几种方法都没效。","author":{"login":"Scott-YuYan"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"这个时间复杂度有啥高的？","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":59,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"把这个`while`去掉就好了。不明白为啥你要套两层循环：\r\n\r\n1. `while`\r\n2. `for (File file : files)`\r\n\r\n因为`files`永远不为空，所以这个循环永远不会结束。","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":58,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"所以这玩意为什么不是final的呢。。。","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":19,"originalLine":19,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"其实这里就没必要用`ConcurrentHashMap`了，想一想为什么？","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"因为这是一个局部变量啊，没有任何并发写操作发生啊。","author":{"login":"blindpirate"},"commit":{"oid":"9ebc882bd45e8838b379eb14712af16ea4af40c1"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":59,"originalLine":59,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEu43TA==","node":{"number":10,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEu7CHw==","node":{"number":11,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEvCNFg==","node":{"number":12,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这里要把原始异常包进去：\r\n\r\n```\r\nthrow new RuntimeException(e);\r\n```\r\n\r\n否则会丢失原始信息的。","author":{"login":"blindpirate"},"commit":{"oid":"02ce0663ababd06f80102184f84f5fd6cbe5368f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":46,"originalLine":46,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"怎么说呢，你的这些`forEach`用的有点“过头”了，也就是给人一种“为了用lambda表达式而用lambda表达式”的感觉，两层嵌套的`forEach`让可读性大大降低。\r\n\r\n建议：将不必要的代码抽离出去，例如\r\n\r\n```\r\n            BufferedReader reader;\r\n            try {\r\n                reader = new BufferedReader(new FileReader(file));\r\n            } catch (FileNotFoundException e) {\r\n                throw new RuntimeException();\r\n            }\r\n```\r\n\r\n可以抽取到外面去，变成一行代码。","author":{"login":"blindpirate"},"commit":{"oid":"02ce0663ababd06f80102184f84f5fd6cbe5368f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":32,"originalLine":32,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这里有一个非常致命的问题：\r\n\r\n想象一下你有10个线程，要处理100个文件。现在在你的算法中，把开头10个文件传递给10个线程，然后等待“它们全部执行结束之后“再处理接下来的10个文件——发现问题了么？假如最开始10个文件中，有一个特别大：9个1KB的文件+1个100M的文件，那么另外9个线程都要等最慢的那个线程结束才能开始接受新的工作。\r\n\r\n所以这个题目只能打及格分。请思考一下，想不明白的来问我。","author":{"login":"blindpirate"},"commit":{"oid":"02ce0663ababd06f80102184f84f5fd6cbe5368f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"https://github.com/hcsp/multithread-word-count/pull/14/commits/a5e4fe01257569a2fc7da413b9ddc067be5eb367","author":{"login":"zhangyongwang4444"},"commit":{"oid":"02ce0663ababd06f80102184f84f5fd6cbe5368f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":44,"originalLine":44,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEvM3Rw==","node":{"number":13,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEvXw1g==","node":{"number":14,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEvqM5w==","node":{"number":15,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"`future.get()`是一个阻塞的操作，这样做根本不是多线程啊。。。。\r\n\r\n- 向线程池提交一个文件\r\n- 等待任务返回\r\n- 向线程池提交下一个文件\r\n- ...\r\n\r\n这实际上是单线程。。。","author":{"login":"blindpirate"},"commit":{"oid":"711a0719006c7ebab7623368ddb52239077eab95"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":26,"originalLine":26,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEwfymw==","node":{"number":16,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"你这编译都不过是怎么有勇气提交上来的？\r\n\r\n扩展阅读：https://zhuanlan.zhihu.com/p/82921974","author":{"login":"blindpirate"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":30,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"测试方法在这报了一个空指针异常，我没分析出问题，该怎么解决。。","author":{"login":"gakei"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":31,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"问题在于这个变量被多个线程共享了。请思考一下为什么。要排查多线程问题，只能通过多打日志的方式，\r\n\r\n例如`System.out.println(\"\"+ Thread.currentThread().getName()+\": \"+line.get());`","author":{"login":"blindpirate"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"这个打印日志的语句要放在哪？是不是在count类中新建个psvm的入口在里面调用方法打印出来？","author":{"login":"gakei"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"不是，我的意思是，要调试一个程序，你应该在程序中的每个可疑的地方打印日志，把相关的信息捕捉出来，然后分析日志查找问题。","author":{"login":"blindpirate"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":29,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"在这一行打`System.out.println(1);`","author":{"login":"blindpirate"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":30,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"在这一行打`System.out.println(2);`","author":{"login":"blindpirate"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":31,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"在这一行打`System.out.println(3);`","author":{"login":"blindpirate"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":32,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"在这一行打`System.out.println(4);`","author":{"login":"blindpirate"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":33,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"在这一行打`System.out.println(5);`","author":{"login":"blindpirate"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":34,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"你提交上来都不运行一下`mvn test`的？","author":{"login":"blindpirate"},"commit":{"oid":"e485ef2bbd27c244518eaf9ceb18f4beb901fdb1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":0,"originalLine":3,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEw70IQ==","node":{"number":17,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOExJDlw==","node":{"number":18,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"private 哪去了","author":{"login":"blindpirate"},"commit":{"oid":"9395d8b1342dba06be243511bb02dccd1317e548"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":16,"originalLine":16,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEyJsFQ==","node":{"number":19,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这个方法叫`setXXX`是有点奇怪的。`setXXX`一般用于setter方法","author":{"login":"blindpirate"},"commit":{"oid":"84cdadd5abcdf3bf8202b58f4318a7a4339605e7"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":40,"originalLine":40,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEzdeIQ==","node":{"number":20,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEzdkBQ==","node":{"number":21,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"发生异常之后，不能「只打印出来，然后若无其事地继续」。发生异常证明发生了一些意外，最好的办法是把它抛出去。","author":{"login":"blindpirate"},"commit":{"oid":"ce704294c4107691122288ba22488d0b8a9a5dec"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":45,"originalLine":45,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"不觉得这里一堆代码for循环套for循环套callable套while非常复杂难读么？试着把它抽取成方法或者类？","author":{"login":"blindpirate"},"commit":{"oid":"ce704294c4107691122288ba22488d0b8a9a5dec"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"受教了","author":{"login":"MaoYuanFang"},"commit":{"oid":"ce704294c4107691122288ba22488d0b8a9a5dec"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":32,"originalLine":32,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEzfY4A==","node":{"number":22,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE0Xpkg==","node":{"number":23,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE183CQ==","node":{"number":24,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE2qqiA==","node":{"number":25,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE3rQwQ==","node":{"number":26,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这里，你在添加每个文件的时候，都把之前所有的历史结果重新加了一遍。应该把最终统计finalResult的代码拿到`for (File file : files) {`循环外面去。","author":{"login":"blindpirate"},"commit":{"oid":"c8da573d5a5ed3a8fc61ea09f89817c6bf82d325"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"```\r\n        for (File file : files) {\r\n            BufferedReader reader = new BufferedReader(new FileReader(file));\r\n            for (int i = 0; i < threadNum; i++) {\r\n                futures.add(threadPool.submit(new WorkerJob(reader)));\r\n\r\n            }\r\n\r\n        }\r\n            Map<String, Integer> finalResult = new HashMap<>();\r\n            for (Future<Map<String, Integer>> future : futures) {\r\n                Map<String, Integer> resultsFromWorker = future.get();\r\n                mergeWorkerResultIntoFinalResult(resultsFromWorker, finalResult);\r\n            }\r\n            return finalResult;\r\n```","author":{"login":"blindpirate"},"commit":{"oid":"c8da573d5a5ed3a8fc61ea09f89817c6bf82d325"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"嗯嗯，好的，我看一下哈。","author":{"login":"Procarihana"},"commit":{"oid":"c8da573d5a5ed3a8fc61ea09f89817c6bf82d325"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":39,"originalLine":38,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE4pBdA==","node":{"number":27,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"写的非常好！","author":{"login":"hcsp-bot"},"commit":{"oid":"a326e21b67c84d14feed5d3fa1c8068652ad6f54"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"> 写的非常好！\r\n\r\n机器人成精了？","author":{"login":"wangpeng1994"},"commit":{"oid":"a326e21b67c84d14feed5d3fa1c8068652ad6f54"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":28,"originalLine":28,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE472TQ==","node":{"number":28,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"emmm，看来直接再 forEach 一层就行了，mergeWorkerResultIntoFinalResult 方法使得不会冲突。","author":{"login":"wangpeng1994"},"commit":{"oid":"cf521b24d9b53b39ba00387dd02f2a531e1a617a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"。。。。。人才啊。。。\r\n\r\n你这样没有发挥多线程的优点，多线程应该分别读多个文件效率才高","author":{"login":"hcsp-bot"},"commit":{"oid":"cf521b24d9b53b39ba00387dd02f2a531e1a617a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"多线程同时读一个文件，竞争的时候还要加锁，降低了效率","author":{"login":"hcsp-bot"},"commit":{"oid":"cf521b24d9b53b39ba00387dd02f2a531e1a617a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":39,"originalLine":39,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE5i4Pg==","node":{"number":29,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE5llhQ==","node":{"number":30,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE60xYw==","node":{"number":31,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE61Cpw==","node":{"number":32,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE613uw==","node":{"number":33,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE7xZaw==","node":{"number":34,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE8Dlxw==","node":{"number":35,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"碰到异常最好包一个`RuntimeException`然后抛出来，而不要假装若无其事地继续。","author":{"login":"hcsp-bot"},"commit":{"oid":"ec551952040a322f45c3e44e7272e429e5e78f0b"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":61,"originalLine":61,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE8mS9Q==","node":{"number":36,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE9lUtQ==","node":{"number":37,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"没有别人使用的话，最好private掉","author":{"login":"hcsp-bot"},"commit":{"oid":"ff5045a72d776d4f3339822bb077b09b8303ffee"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":45,"originalLine":45,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE-DI3Q==","node":{"number":38,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"做的很好，赞，👍","author":{"login":"hcsp-bot"},"commit":{"oid":"22a464b732abd246caaa0f2ef6bdfe81119d00e5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":48,"originalLine":48,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE-4O-g==","node":{"number":39,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE_5tLQ==","node":{"number":40,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"抛出异常之后不能“打印一下，然后若无其事地继续”。应该包一个RuntimeException，终止程序","author":{"login":"hcsp-bot"},"commit":{"oid":"8f2d19b69b9b711ec4022c85582ab66dc7d3773c"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"好的，我改为throw一个RuntimeException","author":{"login":"shenwl"},"commit":{"oid":"8f2d19b69b9b711ec4022c85582ab66dc7d3773c"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":33,"originalLine":33,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFBjdMQ==","node":{"number":41,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFBxBsA==","node":{"number":42,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFGAGog==","node":{"number":43,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFGwu-g==","node":{"number":44,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFGwzPA==","node":{"number":45,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFHV9TQ==","node":{"number":46,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFHWF2g==","node":{"number":47,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFIzK9A==","node":{"number":48,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFI1WHA==","node":{"number":49,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"👍 ","author":{"login":"blindpirate"},"commit":{"oid":"445286dbcd8634ca2459d59b671f341ce83234a4"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount6.java"}]}}}]},"line":20,"originalLine":20,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"`submit`之后立刻`get`，会阻塞在这里，你这个写法其实是串行的。。。一点并发都没有。。。。","author":{"login":"blindpirate"},"commit":{"oid":"445286dbcd8634ca2459d59b671f341ce83234a4"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount6.java"}]}}}]},"line":21,"originalLine":21,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这里为啥要忽略异常。。。。。包一个RuntimeException重新抛出来不好么？养成吞异常的习惯之后迟早会踩到坑的，就是那种“没有任何错误，但是就是不好使”的问题，排查几天后发现，“啊，原来我这里吞了一个异常”","author":{"login":"blindpirate"},"commit":{"oid":"445286dbcd8634ca2459d59b671f341ce83234a4"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount6.java"}]}}}]},"line":33,"originalLine":33,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"👍 ","author":{"login":"blindpirate"},"commit":{"oid":"445286dbcd8634ca2459d59b671f341ce83234a4"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount6.java"}]}}}]},"line":47,"originalLine":47,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"同上，吞异常不是一个好习惯","author":{"login":"blindpirate"},"commit":{"oid":"445286dbcd8634ca2459d59b671f341ce83234a4"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount6.java"}]}}}]},"line":50,"originalLine":50,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFKfIlw==","node":{"number":50,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFKfNSA==","node":{"number":51,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFKzhzQ==","node":{"number":52,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"类名要大写啊","author":{"login":"hcsp-bot"},"commit":{"oid":"f2307dee7401eff592ffe372ba5c9a2c785cfb4f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":39,"originalLine":39,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"`countDown()`要放到`finally`块里，不然万一出个什么异常，你的程序就卡死了","author":{"login":"hcsp-bot"},"commit":{"oid":"f2307dee7401eff592ffe372ba5c9a2c785cfb4f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":39,"originalLine":39,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"放到`finally`里","author":{"login":"hcsp-bot"},"commit":{"oid":"f2307dee7401eff592ffe372ba5c9a2c785cfb4f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}},{"body":"谢谢老师！","author":{"login":"wg2049"},"commit":{"oid":"f2307dee7401eff592ffe372ba5c9a2c785cfb4f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":44,"originalLine":44,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这些操作都要放到`finally`里以保证安全","author":{"login":"hcsp-bot"},"commit":{"oid":"f2307dee7401eff592ffe372ba5c9a2c785cfb4f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}},{"body":"明白了，谢谢老师！","author":{"login":"wg2049"},"commit":{"oid":"f2307dee7401eff592ffe372ba5c9a2c785cfb4f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":46,"originalLine":46,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFOLilA==","node":{"number":53,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFOPw_A==","node":{"number":54,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFRN-2g==","node":{"number":55,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFTwsbg==","node":{"number":56,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFUXGSw==","node":{"number":57,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFU6aKg==","node":{"number":58,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"其实我觉得这里没必要合并流。直接让每个线程自己读自己的文件不就好了？何必要共享同一个流？共享可能带来问题。","author":{"login":"hcsp-bot"},"commit":{"oid":"aa6b5d5a9f334fb42eb3554ca0e7c1f315095dad"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"}]}}}]},"line":17,"originalLine":17,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFVEBBg==","node":{"number":59,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFVbUJg==","node":{"number":60,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFWFLMA==","node":{"number":61,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFWOVOQ==","node":{"number":62,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFYTfdw==","node":{"number":63,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFY5IFQ==","node":{"number":64,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"```suggestion\r\n    public static Map<String, Integer> count(int threadNum, List<File> files)  {\r\n```\r\n\r\n我不太明白你为什么要改方法签名。","author":{"login":"blindpirate"},"commit":{"oid":"c37be849a442ac43abb0e0de1891f29a6d93563e"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"}]}}}]},"line":0,"originalLine":12,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"你可以在每个线程中只处理一个文件么？\r\n\r\n就是\r\n\r\n```\r\nBufferedReader fileReader = new BufferedReader(new FileReader(file));\r\nfutures.add(threadPool.submit(new wordsCountInFile(fileReader)))\r\n```\r\n\r\n你现在完全是把简单问题复杂化了。","author":{"login":"blindpirate"},"commit":{"oid":"c37be849a442ac43abb0e0de1891f29a6d93563e"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"}]}}}]},"line":0,"originalLine":22,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"类名的约定是大写开头的。","author":{"login":"blindpirate"},"commit":{"oid":"c37be849a442ac43abb0e0de1891f29a6d93563e"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"}]}}}]},"line":0,"originalLine":55,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFY9D7g==","node":{"number":65,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这里为什么要去掉？","author":{"login":"hcsp-bot"},"commit":{"oid":"0943fd92b43bd3d3e6242b78c0b9b4780782ee7a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/FileDetector.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":48,"originalLine":48,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"```suggestion\r\n    private static void mergeResultToFinal(Map<String, Integer> waitForMerge, Map<String, Integer> countResult) {\r\n```","author":{"login":"hcsp-bot"},"commit":{"oid":"0943fd92b43bd3d3e6242b78c0b9b4780782ee7a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/FileDetector.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":47,"originalLine":47,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"你怎么知道sleep 100毫秒就足够其他线程完成工作？","author":{"login":"hcsp-bot"},"commit":{"oid":"0943fd92b43bd3d3e6242b78c0b9b4780782ee7a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/FileDetector.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":18,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"CountDownLatch在`FileDetector`里根本没用到，那传递进去干什么？","author":{"login":"hcsp-bot"},"commit":{"oid":"0943fd92b43bd3d3e6242b78c0b9b4780782ee7a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/FileDetector.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":28,"originalLine":28,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"名字取的不好，明明是读文件的，为啥叫`Detector`?我看了这个名字的第一反应是用来检测文件是不是存在的。","author":{"login":"hcsp-bot"},"commit":{"oid":"0943fd92b43bd3d3e6242b78c0b9b4780782ee7a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/FileDetector.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":12,"originalLine":12,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这个CountDownLatch到处都没用到，那它为什么存在？","author":{"login":"hcsp-bot"},"commit":{"oid":"0943fd92b43bd3d3e6242b78c0b9b4780782ee7a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/FileDetector.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":16,"originalLine":16,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"我觉得你这里少了`countDownLatch.await()`.","author":{"login":"hcsp-bot"},"commit":{"oid":"0943fd92b43bd3d3e6242b78c0b9b4780782ee7a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/FileDetector.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":19,"originalLine":19,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"同上，为什么100毫秒就够了？假如正在处理的是很大的文件，100毫秒处理不完怎么办？这种拍脑袋的代码（“我猜100毫秒就够了”）请尽量少写。你需要的是正确的线程同步的方法，比如`CountDownLatch`，但是上面明明创建了`CountDownLatch`准备用，又没用到，我很迷惑不解。","author":{"login":"hcsp-bot"},"commit":{"oid":"0943fd92b43bd3d3e6242b78c0b9b4780782ee7a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/FileDetector.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":18,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"同上。","author":{"login":"hcsp-bot"},"commit":{"oid":"0943fd92b43bd3d3e6242b78c0b9b4780782ee7a"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/FileDetector.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":18,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFZCklw==","node":{"number":66,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"如果不知道自己在做什么，就不要忽略异常。否则你迟早会踩到坑，花了几天时间找问题然后发现问题被你的一个catch块给忽略了。正确的做法是包一个`RuntimeException`再跑出来。","author":{"login":"hcsp-bot"},"commit":{"oid":"8e2c50abc652a085d5b771b032fb5604ff6c6a6f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":24,"originalLine":24,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFZC27g==","node":{"number":67,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"如果这里能用一个无锁容器，例如`ConcurrentHashMap`，就可以省掉一个锁了。","author":{"login":"hcsp-bot"},"commit":{"oid":"d1f5e7c93a45ce60c92553278ee2f0f670263450"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount6.java"}]}}}]},"line":22,"originalLine":22,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"如果异常出现了，这里就不应该继续了，而你若无其事地返回了一个null，就会在更后面的处理中抛出空指针异常。所以，最好的办法就是在这里就抛出异常。","author":{"login":"hcsp-bot"},"commit":{"oid":"d1f5e7c93a45ce60c92553278ee2f0f670263450"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount6.java"}]}}}]},"line":25,"originalLine":25,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"碰到异常的时候，不能“打印一下，然后若无其事地继续”，要么处理它，要么中止程序，总之不能假装什么都没发生一样继续。","author":{"login":"hcsp-bot"},"commit":{"oid":"d1f5e7c93a45ce60c92553278ee2f0f670263450"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount6.java"}]}}}]},"line":26,"originalLine":26,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFZC4QQ==","node":{"number":68,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFZDrqQ==","node":{"number":69,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFZDs3Q==","node":{"number":70,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"其实这个异常声明的挺多余的，直接`throw new RuntimeException(e)`就行了，不过，这比把异常丢掉要好得多。","author":{"login":"hcsp-bot"},"commit":{"oid":"52d22102e35b8dd7333c193990719c3716fd9845"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":23,"originalLine":23,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"`merge`，不是`merger`。","author":{"login":"hcsp-bot"},"commit":{"oid":"52d22102e35b8dd7333c193990719c3716fd9845"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":62,"originalLine":62,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这两个如果相同的话，是可以合并的，IDEA会提示你，这两个catch块可以合并。","author":{"login":"hcsp-bot"},"commit":{"oid":"52d22102e35b8dd7333c193990719c3716fd9845"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":70,"originalLine":70,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFZt9LA==","node":{"number":71,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFaT3Ig==","node":{"number":72,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFbQmBQ==","node":{"number":73,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"类名大写：`WorkerJob`","author":{"login":"hcsp-bot"},"commit":{"oid":"e3a3c2f94c8c8a6ad74bd886aff25d6c79b52df2"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"}]}}}]},"line":50,"originalLine":50,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"其实这样做是比较没有效率的，多个线程“争抢”一个文件。最好每个线程分配一个文件。","author":{"login":"hcsp-bot"},"commit":{"oid":"e3a3c2f94c8c8a6ad74bd886aff25d6c79b52df2"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"}]}}}]},"line":25,"originalLine":25,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFbmsXw==","node":{"number":74,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"其实这样是比较没有效率的，多个线程在“争抢”读同一个文件。最好的办法，是让每个线程自己读一个文件。","author":{"login":"hcsp-bot"},"commit":{"oid":"3f12405a1fe8f44b8195de43fe5a8852090094ec"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}},{"body":"嗯嗯，是的；\r\n我在MultiThreadWordCount3里让每个线程读一个文件，确实是远快于多个线程读同一个文件。","author":{"login":"xdcgh"},"commit":{"oid":"3f12405a1fe8f44b8195de43fe5a8852090094ec"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/WordCount.java"}]}}}]},"line":25,"originalLine":25,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFddpCQ==","node":{"number":75,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFe_m-A==","node":{"number":76,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFf0-bA==","node":{"number":77,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"让多个线程去读取同一个文件是比较没有效率的行为。最好的办法是给每个线程分配一个文件去读取。","author":{"login":"hcsp-bot"},"commit":{"oid":"301b603ebb8376337abd8d72dc5a675f065f204b"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":19,"originalLine":19,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFgWGfA==","node":{"number":78,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这样使得多个线程“争抢”一个文件，效率比较低，最好每个线程分配一个文件，相互之间没有竞争，效率会高点。","author":{"login":"hcsp-bot"},"commit":{"oid":"c324da7c8ff655ac1387638ac8c2d9b4a07510bd"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":16,"originalLine":16,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFglWSg==","node":{"number":79,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFhFEOg==","node":{"number":80,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"不能“打印一下异常，然后若无其事地继续程序，就好像什么都没发生过一样”。打印的异常很容易被忽略，这样做是给以后挖坑。在多线程的环境下尤其要注意，因为异常的抛出是违反直觉的。应该把其他线程中的异常收集到一起，最后检查异常，若有则抛出异常。","author":{"login":"hcsp-bot"},"commit":{"oid":"1ce781f33ccde7f08e2adcee5bcb82609eb84d0f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/Utils.java"}]}}}]},"line":38,"originalLine":38,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这里同理，不能“打印一下异常，然后若无其事地继续程序，就好像什么都没发生过一样”。","author":{"login":"hcsp-bot"},"commit":{"oid":"1ce781f33ccde7f08e2adcee5bcb82609eb84d0f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/Utils.java"}]}}}]},"line":26,"originalLine":26,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"同上。","author":{"login":"hcsp-bot"},"commit":{"oid":"1ce781f33ccde7f08e2adcee5bcb82609eb84d0f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/Utils.java"}]}}}]},"line":27,"originalLine":27,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这里的map1可能有线程安全问题，如果是HashMap 显而易见是有问题的，如果是ConcurrentHashMap也有问题,因为get 和put操作不具备原子性,Map中的Integer线程不安全","author":{"login":"zhengquan45"},"commit":{"oid":"1ce781f33ccde7f08e2adcee5bcb82609eb84d0f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/Utils.java"}]}}}]},"line":44,"originalLine":44,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFheE4Q==","node":{"number":81,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"多余的空行","author":{"login":"hcsp-bot"},"commit":{"oid":"17cd4e9c4b8feb779d47bc49a06c5c2164f04112"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":46,"originalLine":46,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"多余的空行","author":{"login":"hcsp-bot"},"commit":{"oid":"17cd4e9c4b8feb779d47bc49a06c5c2164f04112"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":44,"originalLine":44,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"多余的空行","author":{"login":"hcsp-bot"},"commit":{"oid":"17cd4e9c4b8feb779d47bc49a06c5c2164f04112"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":33,"originalLine":33,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFhju1Q==","node":{"number":82,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这样虽然能够工作，但是会出现多个线程“争抢”同一个文件的情况。最好让每个线程读取一个文件，互不干扰。","author":{"login":"hcsp-bot"},"commit":{"oid":"222fc4af4c574b4a796d2c811cc049a0aa9a64a8"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":19,"originalLine":19,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFh81TQ==","node":{"number":83,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFjDEjQ==","node":{"number":84,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这样是假的多线程，每个文件的读取都必须等上一个文件读取完（可以通过打印一些日志看出来）。并且在每个文件被读取的时候，多个线程都在争抢这个文件，效率不是很高，建议每个文件分配一个线程。","author":{"login":"hcsp-bot"},"commit":{"oid":"c9f1d11da78a6ae4f9ad001701f4123521563869"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":36,"originalLine":36,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFjcXgw==","node":{"number":85,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFj0J9A==","node":{"number":86,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这个一个“伪多线程”程序。每个File循环都必须等上一个循环结束后才能开始（不理解的话可以打印日志确认）。并且，在每个循环中，多个线程争抢一个文件，对性能是不利的。请尝试给每个线程分配一个独占的文件。","author":{"login":"hcsp-bot"},"commit":{"oid":"c078d4c28d06cbb0997e873c646be8ac07bcf509"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":21,"originalLine":21,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFlUYXg==","node":{"number":87,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFmSijQ==","node":{"number":88,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"加锁的意义何在？即然使用了多线程，又给每个线程的执行加了锁让他们串行执行，那还要多线程干什么？","author":{"login":"hcsp-bot"},"commit":{"oid":"b3d9471dd3258581e6a6e5008f1c3f9e4443132f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"}]}}}]},"line":0,"originalLine":27,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"我不知道你还记不记得，`start()`方法会立刻返回，不会等线程结束。所以你的这个代码等于开启了若干个线程，然后不等这些线程结束就立刻将result返回，得到的结果怎么可能正确呢？（result返回的时候，其他线程的工作还没结束，甚至可能还没开始）。要验证这一点，可以在程序里打印很多的日志，看看return语句和读取文件的代码执行的顺序，谁先发生，谁后发生。不等线程的工作完成就返回结果，得到的结果肯定是错误的。","author":{"login":"hcsp-bot"},"commit":{"oid":"b3d9471dd3258581e6a6e5008f1c3f9e4443132f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"}]}}}]},"line":0,"originalLine":21,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFmS0ZQ==","node":{"number":89,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"我看不懂这个方法的意图何在。能简单一点，每个线程/方法只处理一个文件么？\r\n\r\n```\r\nfor (File file: files) {\r\n    Future<HashMap<String, Integer>> future = threadPool.submit(() -> getTheCountResult(file));\r\n    futures.add(future);\r\n}\r\n\r\n// 每个线程只处理一个文件，什么 fileIndex commonReader 通通不要了\r\nprivate static HashMap<String, Integer> getTheCountResult(File file) {\r\n```","author":{"login":"blindpirate"},"commit":{"oid":"99a240d2bd5e6d669c694342054ce71787655680"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":0,"originalLine":31,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFmS8Sw==","node":{"number":90,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"多个线程争抢一个文件的效率稍低。","author":{"login":"hcsp-bot"},"commit":{"oid":"99a240d2bd5e6d669c694342054ce71787655680"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":18,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFnMKIQ==","node":{"number":91,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFpK0fw==","node":{"number":92,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这不能算是一个真正的多线程程序。在每个`eachFileFinalResult`方法执行时，这个循环都要等它执行完毕才能执行下一次循环，这样就失去了多线程的意义。","author":{"login":"hcsp-bot"},"commit":{"oid":"d99efe9b36605b9bafaefc10c4d47c2cbbbe3b8b"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":29,"originalLine":29,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFqWx7w==","node":{"number":93,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFrALVw==","node":{"number":94,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"`countDown()`没有放到`finally`中，一旦读文件的时候有个异常，你的程序就卡死了。","author":{"login":"hcsp-bot"},"commit":{"oid":"005bcb7964ff956a92e817e591cc132489cf1e8f"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":32,"originalLine":32,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"不能“打印一下异常，然后若无其事地继续程序，就好像什么都没发生过一样”。打印的异常很容易被忽略，这样做是给以后挖坑。遇到处理不了的异常，最好包一层`RuntimeException`/`RuntimeException`重新抛出来：\r\n\r\n```\r\nthrow new RuntimeException(e);\r\n```","author":{"login":"hcsp-bot"},"commit":{"oid":"005bcb7964ff956a92e817e591cc132489cf1e8f"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":55,"originalLine":55,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":" 这里有相同的问题，一旦异常出现，这个`signal`就永远不会发出去，主线程的`await`就会永远等待。","author":{"login":"hcsp-bot"},"commit":{"oid":"005bcb7964ff956a92e817e591cc132489cf1e8f"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":55,"originalLine":55,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFrUN6g==","node":{"number":95,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFsfgiQ==","node":{"number":96,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFu7NrA==","node":{"number":97,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"可以不要让多个线程争抢一个文件，而是给每个线程分配独立的文件，令其和其他线程互不干扰，效率会高一点。","author":{"login":"hcsp-bot"},"commit":{"oid":"0a0a0cfc3cf47427b1610d187782b27ff740f97b"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":19,"originalLine":19,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFvTLUw==","node":{"number":98,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"你能够把多个地方用到到代码抽取成一个公用的方法，非常好。但是，很不幸的是，这个方法不是线程安全的。一个常见的误区是，“只要使用了ConcurrentHashMap就是线程安全的”，不是这样的。在这里，你以为是线程安全的代码实际上包含两个操作：\r\n\r\n1. concurrentHashMap.getOrDefault(word, 0)\r\n2. concurrentHashMap.put\r\n\r\n这是线程问题的来源，它并不是原子操作，多个线程访问时可能出现问题。","author":{"login":"blindpirate"},"commit":{"oid":"6ef3277124d5a44a5daaa08e27fb40ce5316e10a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReaderUtils.java"}]}}},{"body":"被坑了，已经将这两个操作放入同步代码块了","author":{"login":"KisetsuLee"},"commit":{"oid":"6ef3277124d5a44a5daaa08e27fb40ce5316e10a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReaderUtils.java"}]}}}]},"line":0,"originalLine":25,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"join会让当前线程停下来等待，所以压根不是多线程。","author":{"login":"blindpirate"},"commit":{"oid":"6ef3277124d5a44a5daaa08e27fb40ce5316e10a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReaderUtils.java"}]}}}]},"line":25,"originalLine":25,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"请尽量不要让多个线程共享`BufferedReader`（我知道课程里是这么讲的，但那是一个文件），最好给每个线程分配一个文件，会大大简化代码，同时提高效率（多个线程争抢一个文件是低效的）。","author":{"login":"blindpirate"},"commit":{"oid":"6ef3277124d5a44a5daaa08e27fb40ce5316e10a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReaderUtils.java"}]}}}]},"line":17,"originalLine":17,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"不能“打印一下异常，然后若无其事地继续程序，就好像什么都没发生过一样”。打印的异常很容易被忽略，这样做是给以后挖坑。最好的办法是，遇到处理不了的异常，包一层`RuntimeException`重新抛出来：\r\n\r\n```\r\nthrow new RuntimeException(e);\r\n```","author":{"login":"hcsp-bot"},"commit":{"oid":"6ef3277124d5a44a5daaa08e27fb40ce5316e10a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReaderUtils.java"}]}}},{"body":"...忽略了。。这事情CI应该可以做的吧","author":{"login":"KisetsuLee"},"commit":{"oid":"6ef3277124d5a44a5daaa08e27fb40ce5316e10a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReaderUtils.java"}]}}}]},"line":48,"originalLine":48,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"第一，请不要不分青红皂白一股脑把所有文件提交上来，这是非常不好的习惯。\r\n第二，提交完了请查看一下CI的测试结果，通过了才代表没有问题。","author":{"login":"hcsp-bot"},"commit":{"oid":"6ef3277124d5a44a5daaa08e27fb40ce5316e10a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReaderUtils.java"}]}}}]},"line":32,"originalLine":32,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFwV5wg==","node":{"number":99,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFwXVaQ==","node":{"number":100,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFz1h0g==","node":{"number":101,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"请不要改方法签名：\r\n\r\n```\r\npublic static Map<String, Integer> count(int threadNum, List<File> files)\r\n```\r\n\r\n测试依赖这个方法签名。","author":{"login":"blindpirate"},"commit":{"oid":"9779b1f61fbaf93c337a0cca9ff8c7f3de2a4af5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}},{"body":"OK","author":{"login":"huiquan99"},"commit":{"oid":"9779b1f61fbaf93c337a0cca9ff8c7f3de2a4af5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":0,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF0quHA==","node":{"number":102,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF1NPzA==","node":{"number":103,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF1p8yg==","node":{"number":104,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF1q77Q==","node":{"number":105,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF1z8Ug==","node":{"number":106,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF11jrA==","node":{"number":107,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF2ISMw==","node":{"number":108,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF2WBuw==","node":{"number":109,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这不是多线程，每个文件都必须等上一个文件读完了才能继续。","author":{"login":"hcsp-bot"},"commit":{"oid":"df92777ca12c1e4a85e1c81b62215706fbc51193"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":25,"originalLine":25,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF2m6_g==","node":{"number":110,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这个命名不符合Java的命名约定，Java命名约定里没有下划线","author":{"login":"blindpirate"},"commit":{"oid":"d110e3ac8a1f2960616ef78f45971f9ac61a0398"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":14,"originalLine":14,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"不需要这个循环，直接往线程池里丢就行了，线程池满了的话新任务会自动排队等待可用线程的","author":{"login":"blindpirate"},"commit":{"oid":"d110e3ac8a1f2960616ef78f45971f9ac61a0398"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":20,"originalLine":20,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这里的merge去掉，最后merge一次就行","author":{"login":"blindpirate"},"commit":{"oid":"d110e3ac8a1f2960616ef78f45971f9ac61a0398"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":24,"originalLine":24,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF2oKbg==","node":{"number":111,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF23g-A==","node":{"number":112,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"方法消协开头","author":{"login":"hcsp-bot"},"commit":{"oid":"e822a2a4536ab45fbf60fb2fa2a24d883dc373e8"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/FileUtil.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":37,"originalLine":37,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"```\r\nfor (File file : files) {\r\n  BufferedReader reader = new BufferedReader(new FileReader(file));\r\n  futures.add(threadPool.submit(new CountWordsJob(reader)));\r\n}\r\n```\r\n\r\n里面的for循环是多余的，线程池会自动处理好线程相关的事情。","author":{"login":"hcsp-bot"},"commit":{"oid":"e822a2a4536ab45fbf60fb2fa2a24d883dc373e8"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/FileUtil.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":40,"originalLine":40,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF3uK1w==","node":{"number":113,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF4PYjg==","node":{"number":114,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"每次循环都需要等所有线程都结束之后才能开始下一个循环，所以这不是一个严格的多线程程序，只是把一个文件的读取多线程化了而已。","author":{"login":"hcsp-bot"},"commit":{"oid":"0ccc207fb43917cd661f331c5b39efc0fc8fe917"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":29,"originalLine":29,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF41HOg==","node":{"number":115,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF8LlmQ==","node":{"number":116,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF8wNWg==","node":{"number":117,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这几行代码在很多地方被使用，应该尽量提取成公用方法，避免重复。","author":{"login":"hcsp-bot"},"commit":{"oid":"4321208de6c8d28e41d6b4bd2780391ad42d90e0"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"}]}}}]},"line":42,"originalLine":42,"originalStartLine":39,"startLine":39,"startDiffSide":"RIGHT"}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF-t6Ww==","node":{"number":118,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF_e2-g==","node":{"number":119,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF_fkvw==","node":{"number":120,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"我们假定你有threadNum=5，10个文件，这个latch的初始大小是5*10=50（意味着它要等50次`latch.countDown()`才会继续）\r\n\r\n但是你现在在当前的这个循环中，启动了5个线程去进行工作，最多只会`countDown()`五次，所以，这个`latch.await()`会永远等待剩下的45次`countDown`。\r\n\r\n建议：不要用两层循环！！！大大增加了复杂度。你可以这么做：把文件列表分割成threadNum个组，即：\r\n\r\n`List<List<File>> fileGroups = splitIntoGroup(files, threadNum)` 然后每个线程负责读取一个组。这个分割函数不需要你自己写，guava里有现成的。","author":{"login":"hcsp-bot"},"commit":{"oid":"e6879cd65bf99579c78466fc6156515d4b4c2811"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReadFileUtils.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReadFileWithThread.java"}]}}}]},"line":0,"originalLine":33,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"你这样不是threadNum个线程，是threadNum*files.size()个线程。如果有一万个文件，你这样会开好几万个线程，内存直接会爆炸。","author":{"login":"hcsp-bot"},"commit":{"oid":"e6879cd65bf99579c78466fc6156515d4b4c2811"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReadFileUtils.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReadFileWithThread.java"}]}}}]},"line":0,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"```suggestion\r\n                try {\r\n                    wordCountMapList.add(threadPool.submit(new ReadFileWithCallable(reader)));\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n        }\r\n```\r\n\r\n\r\n\r\n\r\n不要用两层循环！！\r\n不要用两层循环！！\r\n不要用两层循环！！\r\n不要用两层循环！！\r\n\r\n现在线程池已经是指定大小的了，直接把文件往里丢就行了，不需要再将每个文件分割了。\r\n","author":{"login":"hcsp-bot"},"commit":{"oid":"e6879cd65bf99579c78466fc6156515d4b4c2811"},"pullRequest":{"files":{"nodes":[{"path":"pom.xml"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReadFileUtils.java"},{"path":"src/main/java/com/github/hcsp/multithread/ReadFileWithThread.java"}]}}}]},"line":0,"originalLine":34,"originalStartLine":26,"startLine":null,"startDiffSide":"RIGHT"}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGAO_3g==","node":{"number":121,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"```suggestion\r\n    public static Map<String, Integer> count(int threadNum, List<File> files) throws FileNotFoundException, ExecutionException, InterruptedException {\r\n```","author":{"login":"blindpirate"},"commit":{"oid":"6c951936c2070b18f3cdd66ea364934f9f4b2958"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/CountFileUtils.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"}]}}}]},"line":0,"originalLine":14,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"```suggestion\r\nthreadPool.shutdown();\r\n```","author":{"login":"blindpirate"},"commit":{"oid":"6c951936c2070b18f3cdd66ea364934f9f4b2958"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/CountFileUtils.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"}]}}}]},"line":0,"originalLine":74,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"```suggestion\r\n    public static Map<String, Integer> count(int threadNum, List<File> files) throws ExecutionException, InterruptedException {\r\n        ExecutorService threadPool = Executors.newFixedThreadPool(threadNum);\r\n        List<Future<Map<String, Integer>>> futures = new ArrayList<>();\r\n        for (File file : files) {\r\n            futures.add(threadPool.submit(new WorkerJob(file)));\r\n        }\r\n```","author":{"login":"blindpirate"},"commit":{"oid":"6c951936c2070b18f3cdd66ea364934f9f4b2958"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/CountFileUtils.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"}]}}}]},"line":0,"originalLine":18,"originalStartLine":8,"startLine":null,"startDiffSide":"RIGHT"},{"comments":{"nodes":[{"body":"注释不用跟宝贝似的留着，我们有源代码版本控制系统就是为了溯源的。","author":{"login":"hcsp-bot"},"commit":{"oid":"6c951936c2070b18f3cdd66ea364934f9f4b2958"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/CountFileUtils.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"}]}}}]},"line":70,"originalLine":70,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGAkD3w==","node":{"number":122,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGBE7Pw==","node":{"number":123,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGBaQuA==","node":{"number":124,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGCbW1Q==","node":{"number":125,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGCzvFQ==","node":{"number":126,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"首先的一个建议是，不要写这么长的代码，嵌套好几层for循环/try-catch，对可读性是一场灾难。在你的这个例子中，`Thread`里的代码完全可以抽取到另外一个类里，代码越短越容易理清里面的逻辑，这是人类的正常思维。","author":{"login":"hcsp-bot"},"commit":{"oid":"3e0c7838705460b0a64eff830a95f7ec521ef3a5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":23,"originalLine":23,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"尽量不要做这种“把一个文件分配给多个线程去读”的事情，课堂上的例子只是展示多线程的用法。在这里，最好的办法是先把`files`切割成`ThreadNumber`个列表，即：\r\n\r\n```\r\nList<List<File>> chunks = split(files);\r\n```\r\n\r\n然后把每个块分配给一个线程。这样的好处是：1. 可以少一层for循环。2. 避免多个线程“争抢”同一个文件会提高一些效率。参考这里：https://github.com/hcsp/multithread-word-count/pull/9/files#diff-f285e7810ca08349a3cb65fb8ca5e5f6R33","author":{"login":"hcsp-bot"},"commit":{"oid":"3e0c7838705460b0a64eff830a95f7ec521ef3a5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":30,"originalLine":30,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这是最大的问题，直接导致这个程序无法正常工作。\r\n\r\n请仔细读一读`Object.wait`方法的javadoc，其中明确指出要放在一个while循环中，我不知道你是从哪里学来的这个用法不放到循环中：\r\n\r\n>      * As in the one argument version, interrupts and spurious wakeups are\r\n>      * possible, and this method should always be used in a loop:\r\n>      * <pre>\r\n>      *     synchronized (obj) {\r\n>      *         while (&lt;condition does not hold&gt;)\r\n>      *             obj.wait();\r\n>      *         ... // Perform action appropriate to condition\r\n>      *     }\r\n>      * </pre>\r\n\r\n这个问题导致程序没有等待所有线程结束就提前执行下面的代码，在我的机器上抛出：\r\n\r\n```\r\nCaused by: java.util.ConcurrentModificationException\r\n\tat java.util.ArrayList$Itr.checkForComodification(ArrayList.java:909)\r\n\tat java.util.ArrayList$Itr.next(ArrayList.java:859)\r\n\tat com.github.hcsp.multithread.MultiThreadWordCount1.count(MultiThreadWordCount1.java:59)\r\n\t... 73 more\r\n```","author":{"login":"hcsp-bot"},"commit":{"oid":"3e0c7838705460b0a64eff830a95f7ec521ef3a5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":56,"originalLine":56,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这里还没等其他线程结束（`Thread.start`）就开始继续程序，会导致其他线程和当前线程齐头并进地进行，无法得到正确的结果（你没发现`Condition condition`根本就没`await`么？）","author":{"login":"hcsp-bot"},"commit":{"oid":"3e0c7838705460b0a64eff830a95f7ec521ef3a5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":55,"originalLine":55,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这里的`future.get()`是阻塞方法，每个文件都必须等待上一个文件结束后才能读取，实际上根本不是多线程。","author":{"login":"hcsp-bot"},"commit":{"oid":"3e0c7838705460b0a64eff830a95f7ec521ef3a5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":50,"originalLine":50,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"我发现这些逻辑重复了五遍，能想办法把公用的逻辑抽取出来放到一个方法里，然后只调用它，而不是总是“复制-粘贴”么？","author":{"login":"hcsp-bot"},"commit":{"oid":"3e0c7838705460b0a64eff830a95f7ec521ef3a5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}},{"body":"IDEA都警告你了，有很多的重复代码：\r\n\r\n![image](https://user-images.githubusercontent.com/49554844/81027861-dad57800-8eb1-11ea-9918-c19bccf9e0d5.png)\r\n","author":{"login":"hcsp-bot"},"commit":{"oid":"3e0c7838705460b0a64eff830a95f7ec521ef3a5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":36,"originalLine":36,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"如果你没有用到fork-join操作的话，这里用`ForkJoinPool`和普通的线程池没什么区别。","author":{"login":"hcsp-bot"},"commit":{"oid":"3e0c7838705460b0a64eff830a95f7ec521ef3a5"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":27,"originalLine":27,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGDk--g==","node":{"number":127,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGDmDmQ==","node":{"number":128,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"测试数据可以不用提交上来。","author":{"login":"hcsp-bot"},"commit":{"oid":"1ccf88054a67ea18858fb822eeff356092da34bb"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/1.txt"},{"path":"src/main/java/com/github/hcsp/multithread/2.txt"},{"path":"src/main/java/com/github/hcsp/multithread/3.txt"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":1,"originalLine":1,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这实际上是单线程的：submit之后然后get等待结束，几乎等价于直接在本线程中调用。","author":{"login":"hcsp-bot"},"commit":{"oid":"1ccf88054a67ea18858fb822eeff356092da34bb"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/1.txt"},{"path":"src/main/java/com/github/hcsp/multithread/2.txt"},{"path":"src/main/java/com/github/hcsp/multithread/3.txt"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}},{"body":"已修改。\r\nhttps://github.com/FengJinbao/multithread-word-count/blob/word-count/src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java#L57-L63","author":{"login":"FengJinbao"},"commit":{"oid":"1ccf88054a67ea18858fb822eeff356092da34bb"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/1.txt"},{"path":"src/main/java/com/github/hcsp/multithread/2.txt"},{"path":"src/main/java/com/github/hcsp/multithread/3.txt"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount2.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount3.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount4.java"},{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount5.java"}]}}}]},"line":57,"originalLine":57,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGHvwxQ==","node":{"number":129,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"在处理每个文件的时候虽然是多线程的，但是这个程序需要等待一个文件读完之后才能读取下一个文件，因此不能算是完美。","author":{"login":"hcsp-bot"},"commit":{"oid":"e1793138303683cdc795707723c11beea03702e9"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/multithread/MultiThreadWordCount1.java"}]}}}]},"line":21,"originalLine":21,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGIWZtw==","node":{"number":130,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGI7o4w==","node":{"number":131,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGJEwjA==","node":{"number":132,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGK7OiQ==","node":{"number":133,"reviewThreads":{"nodes":[]},"headRepository":null}}]
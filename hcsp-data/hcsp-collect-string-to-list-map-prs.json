[{"cursor":"Y3Vyc29yOnYyOpHOEd2nFw==","node":{"number":1,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这里为啥要用`LinkedList`。。。`LinkedList`进行排序的时候性能损失是非常可怕的。。。","author":{"login":"blindpirate"},"commit":{"oid":"08ed4fe2d57efbe878fe7eb337e16ae28ff69419"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"另外，这个两层forEach循环可读性也很差。现在的写法只是“能工作”而已","author":{"login":"blindpirate"},"commit":{"oid":"08ed4fe2d57efbe878fe7eb337e16ae28ff69419"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"应该用ArrayList.sort(Comparator c)来做排序吗","author":{"login":"JinLingfeng"},"commit":{"oid":"08ed4fe2d57efbe878fe7eb337e16ae28ff69419"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"不是，userList应该声明成ArrayList","author":{"login":"blindpirate"},"commit":{"oid":"08ed4fe2d57efbe878fe7eb337e16ae28ff69419"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":33,"originalLine":33,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEd3TxA==","node":{"number":2,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEd-IMw==","node":{"number":3,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"参考一下这位同学的实现：https://github.com/hcsp/collect-string-to-list-map/pull/6/files\r\n\r\n看看如何更加简洁，毕竟，写的代码越少，bug就越少。","author":{"login":"blindpirate"},"commit":{"oid":"26f8effd8d419dab03c97d88b57f5027e5bd3a2c"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":20,"originalLine":20,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEeMH2w==","node":{"number":4,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"比较int用这种方法是不安全的，可能会溢出。不过在这个场景下，年龄这个字段还算安全。","author":{"login":"blindpirate"},"commit":{"oid":"5d7dfcf4e27f8103fdebb74227eeb12f3deca43a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":58,"originalLine":58,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEeOmKA==","node":{"number":5,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEenq6Q==","node":{"number":6,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这里其实还有有一个隐患的，因为传入的`List`不一定是可变的。\r\n\r\n不过总体来说，做的相当好了。","author":{"login":"blindpirate"},"commit":{"oid":"00492d8a7f86b4fc536d48b197f375fa89d7716a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}},{"body":"已修改https://github.com/hcsp/collect-string-to-list-map/pull/7/commits/24a4eb5c235f28edb60e1a27dd7417e516b273ca","author":{"login":"JayChenFE"},"commit":{"oid":"00492d8a7f86b4fc536d48b197f375fa89d7716a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":18,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEfYvVg==","node":{"number":7,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEfaNQg==","node":{"number":8,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这里不要使用`.*`。","author":{"login":"blindpirate"},"commit":{"oid":"96e86a3241155fc1acaf06b1168e5e65f392ff7b"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":0,"originalLine":3,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEf0eRQ==","node":{"number":9,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"需要排序的时候不要使用链表，链表的排序效率低的可怕，你可以尝试自己排序一个一千万个元素的`LinkedList`和`ArrayList`，看看二者的时间差距。","author":{"login":"blindpirate"},"commit":{"oid":"095f02c09d39cac40128b9302df6e925a3a484ab"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"谢谢老师，以后不会再用链表排序了。。","author":{"login":"squall1744"},"commit":{"oid":"095f02c09d39cac40128b9302df6e925a3a484ab"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":22,"originalLine":22,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEf0yqA==","node":{"number":10,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"非常好！","author":{"login":"blindpirate"},"commit":{"oid":"3a540929e87b3b840a62d0dde0f0b24704512274"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":21,"originalLine":21,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEgXlTA==","node":{"number":11,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEgiquA==","node":{"number":12,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"干啥要帮我加JUnit库？","author":{"login":"blindpirate"},"commit":{"oid":"8d8e01d0894aaf55601ff3bd7041fbd12ea548d7"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}},{"body":"sorry没注意add的文件","author":{"login":"MoonSv"},"commit":{"oid":"8d8e01d0894aaf55601ff3bd7041fbd12ea548d7"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":0,"originalLine":35,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"你的IDE里面有没有用灰色字体提示你什么东西？按下Alt+Enter键试试？","author":{"login":"blindpirate"},"commit":{"oid":"8d8e01d0894aaf55601ff3bd7041fbd12ea548d7"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":0,"originalLine":27,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"```suggestion\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n```\r\n\r\n> [ERROR] src/main/java/com/github/hcsp/collection/Main.java:[3] (imports) AvoidStarImport: Using the '.*' form of import should be avoided - java.util.*.\r\n\r\n避免使用`*`的方式导入","author":{"login":"blindpirate"},"commit":{"oid":"8d8e01d0894aaf55601ff3bd7041fbd12ea548d7"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":0,"originalLine":3,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEhK5MA==","node":{"number":13,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEiKFZA==","node":{"number":14,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEioPtg==","node":{"number":15,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"@blindpirate 老师，代码本地测试通过了，但是提交还是失败，我不太清楚哪里出问题了。","author":{"login":"CyrusFeng"},"commit":{"oid":"fcb756042703770de2bcef275feacd49a4dfa0a4"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"},{"path":"src/test/java/com/github/hcsp/collection/MainTest.java"}]}}},{"body":"功能上没啥问题，主要是代码风格不符合要求。你可以在快捷键中搜索一下`Reformat`，然后按一下。另外，通过测试的方法是`mvn clean test`。你可以试试。","author":{"login":"blindpirate"},"commit":{"oid":"fcb756042703770de2bcef275feacd49a4dfa0a4"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"},{"path":"src/test/java/com/github/hcsp/collection/MainTest.java"}]}}}]},"line":27,"originalLine":20,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"`.*`这种import方法不能通过checkstyle检查。","author":{"login":"blindpirate"},"commit":{"oid":"fcb756042703770de2bcef275feacd49a4dfa0a4"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"},{"path":"src/test/java/com/github/hcsp/collection/MainTest.java"}]}}}]},"line":0,"originalLine":3,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEircEw==","node":{"number":16,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"每次插入都排序一次显得没有效率。可以在所有元素插入之后排序一次，这样，对于每个部门只需要排序一次。","author":{"login":"blindpirate"},"commit":{"oid":"9c1fd0710479e5aa1565dad42e2b8c368cce22e2"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":27,"originalLine":27,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEi9Cbg==","node":{"number":17,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEj4E7g==","node":{"number":18,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEkFrYw==","node":{"number":19,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEkF2UQ==","node":{"number":20,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这里根本没必要用反射啊。。。你可以声明\r\n\r\n```\r\nstatic class MyIntComparator implements Comparator<User>\r\n```\r\n\r\n反射不仅麻烦，还慢","author":{"login":"blindpirate"},"commit":{"oid":"6090f8b4895ac18ccbb45fd705388f4b043ea4f4"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":51,"originalLine":51,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEluRcQ==","node":{"number":21,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEmAfWg==","node":{"number":22,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEmEQ_g==","node":{"number":23,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这么写实在是太啰嗦了。。。","author":{"login":"blindpirate"},"commit":{"oid":"b2af2de1e59a42f5158d3105b06fa9f8c25334a9"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"是的...","author":{"login":"wangpeng1994"},"commit":{"oid":"b2af2de1e59a42f5158d3105b06fa9f8c25334a9"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":25,"originalLine":25,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEmMW9A==","node":{"number":24,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"功能上没问题，但是未免显得麻烦。\r\n\r\n参考一下模范代码的写法：https://github.com/hcsp/collect-string-to-list-map/pull/7","author":{"login":"blindpirate"},"commit":{"oid":"99140805bbc0631842695a386a53f5fbb092a49f"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":19,"originalLine":19,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEnhsyQ==","node":{"number":25,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这里为啥要用`Iterator`而不是直接`for(User user: users)`？","author":{"login":"blindpirate"},"commit":{"oid":"827c6c8f4f6de095f84a4a62dbc3ead0d5d6fbba"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":34,"originalLine":34,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEoQXiA==","node":{"number":26,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"好评！！！我都没想到先排序再groupBy的方法","author":{"login":"blindpirate"},"commit":{"oid":"2cc01d7588c6359575ecccaf1407631bc4591e0c"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":20,"originalLine":20,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEoeWog==","node":{"number":27,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"```suggestion\r\npublic class User implements Comparable<User> {\r\n```","author":{"login":"blindpirate"},"commit":{"oid":"f7952563ef14f4e858765f3ebb1b989b2bc7a5e9"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":0,"originalLine":5,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"```\r\n[ERROR] src/main/java/com/github/hcsp/collection/Main.java:[3] (imports) AvoidStarImport: Using the '.*' form of import should be avoided - java.util.*.\r\n```","author":{"login":"blindpirate"},"commit":{"oid":"f7952563ef14f4e858765f3ebb1b989b2bc7a5e9"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":0,"originalLine":3,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEo0wbA==","node":{"number":28,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这里按我的理解应该是对主键的排序，为什么可以对年龄进行排序呢?","author":{"login":"gakei"},"commit":{"oid":"acd67a08fc478877291dfa5564bdd16070303abc"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"1. 对于`User`这样一个自定义的类，什么是它的“主键”？\r\n2. 打开Collections.sort方法，查看一下这个方法的签名，看它在对什么东西进行排序。","author":{"login":"blindpirate"},"commit":{"oid":"acd67a08fc478877291dfa5564bdd16070303abc"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":33,"originalLine":28,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"此处可不可以理解为我建立了一个地方来存放我的哈希桶，每当我发现没有对应的hashCode的桶的时候，我就用put来新建一个桶，把键值对放进去？当存在的时候就使用add来往哈希桶添加键值对？","author":{"login":"gakei"},"commit":{"oid":"acd67a08fc478877291dfa5564bdd16070303abc"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"嗯。。。总觉得你隐隐约约似乎说的对又似乎不对，所以我重新说一遍：\r\n\r\n`Map<String, List<User>> map = new HashMap<>();`声明了一个新的从`String`到`List<User>`的映射。默认是空的。\r\n\r\n```\r\nif (!map.containsKey(user.getDepartment())){\r\n    List<User> list = new ArrayList<>();\r\n    list.add(user);\r\n    map.put(user.getDepartment(), list);\r\n}\r\n```\r\n\r\n如果使用某个部门作为键值的`List<String>`不存在，则新建之。新建完了将`user`添加进去。\r\n\r\n```\r\n } else{\r\n    map.get(user.getDepartment()).add(user);\r\n }\r\n```\r\n\r\n如果使用某个部门作为键值的`List<String>`存在，则直接将`user`添加进去。","author":{"login":"blindpirate"},"commit":{"oid":"acd67a08fc478877291dfa5564bdd16070303abc"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":21,"originalLine":16,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEpZ96w==","node":{"number":29,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEpqdxg==","node":{"number":30,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEqrzQg==","node":{"number":31,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOErVEzg==","node":{"number":32,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEs6NDQ==","node":{"number":33,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这里干嘛分开成两行。。看着好奇怪","author":{"login":"blindpirate"},"commit":{"oid":"0c547d09955dc80b205b4825e94777bca3cf6ad2"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}},{"body":"大概是手滑了之后没在意，然后 idea 的格式化好像也没自动纠正这个。。然后就被这样提交上来了。。","author":{"login":"richardhtw"},"commit":{"oid":"0c547d09955dc80b205b4825e94777bca3cf6ad2"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":35,"originalLine":35,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEs7U6w==","node":{"number":34,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"```suggestion\r\n        return users.stream().sorted(Comparator.comparing(User::getAge)).collect(Collectors.groupingBy(User::getDepartment));\r\n```","author":{"login":"blindpirate"},"commit":{"oid":"4abcdcd19f6329458423bf31dbeb2ba64e4ae682"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":0,"originalLine":17,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEugrog==","node":{"number":35,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEwkn_A==","node":{"number":36,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOExHkdg==","node":{"number":37,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOExJO9w==","node":{"number":38,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOEzcGbA==","node":{"number":39,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE14goA==","node":{"number":40,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"不用每次插入的时候都排序，在插入前排序或者全部插入完再排一次序，效率会稍微高一点。","author":{"login":"blindpirate"},"commit":{"oid":"adc5ddeef452a374a8cf75df1572f0c0afd59fa4"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":28,"originalLine":28,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE19dgw==","node":{"number":41,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"有些格式化问题，但是你写的也太麻烦了。。。。\r\n\r\n要不然先思考一下？或者看看别的同学的写法？\r\n\r\n另外，判断user.getAge()==0是在干啥？","author":{"login":"blindpirate"},"commit":{"oid":"ebbb7ac42ca3b6a88845451451b5e61a7c2451fd"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"好的","author":{"login":"903875816"},"commit":{"oid":"ebbb7ac42ca3b6a88845451451b5e61a7c2451fd"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"这个有写错了，想写user.getAge()==null的","author":{"login":"903875816"},"commit":{"oid":"ebbb7ac42ca3b6a88845451451b5e61a7c2451fd"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":0,"originalLine":38,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE2F9Hw==","node":{"number":42,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE2fRMg==","node":{"number":43,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这写的也忒麻烦了。。。请参考一下别的同学的答案？","author":{"login":"blindpirate"},"commit":{"oid":"3f841048b11020ad20f677e0580178f08d402c56"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}},{"body":"是的，写完看了一下**模范代码**。没想到`java8`有分组的功能。","author":{"login":"wangjie-fourth"},"commit":{"oid":"3f841048b11020ad20f677e0580178f08d402c56"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":24,"originalLine":24,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE2wRjw==","node":{"number":44,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE3j8NQ==","node":{"number":45,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE4DBgQ==","node":{"number":46,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE4R2ZA==","node":{"number":47,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE42O9A==","node":{"number":48,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"你这样不科学吧？难道只能处理技术部和市场部？未来要是传进来的参数多了一个人力资源部就没办法处理了？","author":{"login":"hcsp-bot"},"commit":{"oid":"6b88e31bf73590afa74ef421371046ca67152213"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":19,"originalLine":19,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"当相等的时候应该返回0。这是compareTo的约定，需要遵守。不遵守约定的后果就是，说不定哪天就踩到坑卡上半天。","author":{"login":"hcsp-bot"},"commit":{"oid":"6b88e31bf73590afa74ef421371046ca67152213"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":57,"originalLine":57,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE5AYzg==","node":{"number":49,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE5UE9Q==","node":{"number":50,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE6e5jA==","node":{"number":51,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE6vSYg==","node":{"number":52,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE6-fDg==","node":{"number":53,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这个思路还挺新奇的。。。第一次见差点没看懂","author":{"login":"hcsp-bot"},"commit":{"oid":"b1d8e91ec5bf702f469493de49f1521946695332"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":27,"originalLine":27,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE9Vtyg==","node":{"number":54,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOE991WQ==","node":{"number":55,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"每次加完之后排序效率稍差，可以等全部的user都加完之后再整体排一次序。功能上没什么问题。","author":{"login":"hcsp-bot"},"commit":{"oid":"fcf689a36f67dc6f139224d816f7cba554edb608"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"👌","author":{"login":"wangyujie1207"},"commit":{"oid":"fcf689a36f67dc6f139224d816f7cba554edb608"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":20,"originalLine":20,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFAPNGQ==","node":{"number":56,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFDtc0w==","node":{"number":57,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"如果先把users排个序，就不需要做两次了：\r\n\r\n```\r\nusers.stream().sorted(Comparator.comparing(User::getAge)).collect(Collectors.groupingBy(User::getDepartment));\r\n```","author":{"login":"hcsp-bot"},"commit":{"oid":"435601a653fc70afa076a99aee0d22c19a988518"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"学到了","author":{"login":"thoughtliuw"},"commit":{"oid":"435601a653fc70afa076a99aee0d22c19a988518"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":18,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"如果先把users排个序，就不需要做两次了：\r\n\r\n```\r\nusers.stream().sorted(Comparator.comparing(User::getAge)).collect(Collectors.groupingBy(User::getDepartment));\r\n```","author":{"login":"hcsp-bot"},"commit":{"oid":"435601a653fc70afa076a99aee0d22c19a988518"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":18,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFFsR3Q==","node":{"number":58,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFFucPw==","node":{"number":59,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFG4jdA==","node":{"number":60,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFHQEiQ==","node":{"number":61,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFJK96g==","node":{"number":62,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"首先，用减法比较两个int是不靠谱的，因为可能溢出。最好使用`Integer.compare(user.getAge(), o.getAge())。\r\n其次，这里其实可以用lambda表达式，或者更高级的`Comparator::comparing`，注意看IDE的黄色警告。光标移到黄色警告处按Alt+Enter自动修正。","author":{"login":"hcsp-bot"},"commit":{"oid":"fe82d4fea6423e0098e104a9c1bc7bfe528673b6"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":28,"originalLine":28,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFOJMwA==","node":{"number":63,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"如果你注意到IDEA在这里用特殊的颜色提示你的话，你可以尝试将光标移动到这里然后按Alt+Enter，IDEA会给出建议，告诉你如何把代码变得更好。","author":{"login":"hcsp-bot"},"commit":{"oid":"199d172274d985f3d9e5dc070cf581c9a38cfb5b"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}},{"body":"好。最终简化成这样 -> `userList.sort(Comparator.comparingInt(User::getAge));`","author":{"login":"guidetheorient"},"commit":{"oid":"199d172274d985f3d9e5dc070cf581c9a38cfb5b"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":24,"originalLine":24,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"如果你注意到IDEA在这里用特殊的颜色提示你的话，你可以尝试将光标移动到这里然后按Alt+Enter，IDEA会给出建议，告诉你如何把代码变得更好。","author":{"login":"hcsp-bot"},"commit":{"oid":"199d172274d985f3d9e5dc070cf581c9a38cfb5b"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":24,"originalLine":24,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFOXPRw==","node":{"number":64,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFPZMrw==","node":{"number":65,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFRpHhQ==","node":{"number":66,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"Java世界里很少用snake_case这种命名方式，约定是camelCase。","author":{"login":"hcsp-bot"},"commit":{"oid":"8e7352d0f9fdb900f51208ceb4cf6bee294e99f1"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":23,"originalLine":23,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFTuU2g==","node":{"number":67,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFUXeFg==","node":{"number":68,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFUXy-Q==","node":{"number":69,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFVQ0ug==","node":{"number":70,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"不知道你有没有注意到IDEA在这里的提示？你可以按Alt+Enter直接修正。","author":{"login":"hcsp-bot"},"commit":{"oid":"bcd34619bb2ed9e012e5e2e00924446e7ace909a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":25,"originalLine":25,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFVdTqA==","node":{"number":71,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFVvBMQ==","node":{"number":72,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"不明白为啥要复制一份，直接往原先的ArrayList里加不行么？","author":{"login":"hcsp-bot"},"commit":{"oid":"45c34345c1742b50c4a26e0bdd6199c54ff190ed"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}},{"body":"确实 写多了，没有必要。","author":{"login":"NervousOrange"},"commit":{"oid":"45c34345c1742b50c4a26e0bdd6199c54ff190ed"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":18,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"如果你注意到IDEA在这里用特殊的颜色提示你的话，你可以尝试将光标移动到这里然后按Alt+Enter，IDEA会给出建议，告诉你如何把代码变得更好。","author":{"login":"hcsp-bot"},"commit":{"oid":"45c34345c1742b50c4a26e0bdd6199c54ff190ed"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}},{"body":"> 如果你注意到IDEA在这里用特殊的颜色提示你的话，你可以尝试将光标移动到这里然后按Alt+Enter，IDEA会给出建议，告诉你如何把代码变得更好。\r\n\r\n@blindpirate \r\n我是 IDE 自动简化后又撤销了，因为现阶段并没有学 lambda 表达式，所以没有简化的代码 才能让现阶段的我（或者别的同学）看懂把。我写的时候没思路，随便点开几个别的同学写的，都是 lambda表达式，就让我挺迷茫的.... 只能把这个先记到小本本里，以后学到 lambda 表达式了再拿出来对照着看一下，理解是怎么完成简化的。","author":{"login":"NervousOrange"},"commit":{"oid":"45c34345c1742b50c4a26e0bdd6199c54ff190ed"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":27,"originalLine":27,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这个命名好评！！","author":{"login":"hcsp-bot"},"commit":{"oid":"45c34345c1742b50c4a26e0bdd6199c54ff190ed"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":14,"originalLine":14,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFV5a8w==","node":{"number":73,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"```\r\nif (!usersMap.containsKey(user.getDepartment()))\r\n```","author":{"login":"hcsp-bot"},"commit":{"oid":"544c6cab6b5812d7ccad5cd1a2bb6c6882baca46"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":29,"originalLine":29,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFV54qg==","node":{"number":74,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFW7Luw==","node":{"number":75,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"技术部和市场部只是两个示例，不是只有这两个部门的啊……怎么能这么搞，不合格！","author":{"login":"hcsp-bot"},"commit":{"oid":"320dc05540ba4dc0ab002eb0ce40464e5d93ccef"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":19,"originalLine":19,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFXMVbg==","node":{"number":76,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFXMd2Q==","node":{"number":77,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFXnijQ==","node":{"number":78,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFZDDFw==","node":{"number":79,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"没必要每次都sort，最后sort一次就行了。","author":{"login":"hcsp-bot"},"commit":{"oid":"f3d8daa19c1cce9cfafec2060b1dfe1bd56b7833"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":20,"originalLine":20,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFZboPw==","node":{"number":80,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFZuKmQ==","node":{"number":81,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFaK-CA==","node":{"number":82,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"按照约定，相等应该返回0.建议使用`Integer.compare(o1.age, o2.age)`。","author":{"login":"hcsp-bot"},"commit":{"oid":"78d9eaea9ea7b80719e37fb264e0755f3685c96a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":59,"originalLine":59,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"没必要每加一次就sort一次，最后结束后sort一次即可。","author":{"login":"hcsp-bot"},"commit":{"oid":"78d9eaea9ea7b80719e37fb264e0755f3685c96a"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":23,"originalLine":23,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFaL02A==","node":{"number":83,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"没必要每次都sort，最后结束了sort一次就行。","author":{"login":"hcsp-bot"},"commit":{"oid":"032bb2fde75bbffbf78588a1b7702e655049aac8"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":24,"originalLine":24,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFaMFEQ==","node":{"number":84,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFaPa-g==","node":{"number":85,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"不能这么搞啊，不一定只有这两个部门，只要随便多一个部门，这个代码就没法工作了。","author":{"login":"hcsp-bot"},"commit":{"oid":"1379aa14c40e0c131f6fbe6d53f566adb961f533"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":18,"originalLine":18,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFak5gA==","node":{"number":86,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFarDAw==","node":{"number":87,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"按照约定，相等的时候应该返回0.这里可以用`Integer.compare(o1.age,o2.age)`代替。","author":{"login":"hcsp-bot"},"commit":{"oid":"d35364ff0994bbb2ba21a21454f87360b14f24bd"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":59,"originalLine":59,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFatc1g==","node":{"number":88,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这是干啥？？？","author":{"login":"hcsp-bot"},"commit":{"oid":"05116b0ddb9f28401942751912ab9be60dc7f092"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":5,"originalLine":5,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"这么多空行。。。","author":{"login":"hcsp-bot"},"commit":{"oid":"05116b0ddb9f28401942751912ab9be60dc7f092"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":40,"originalLine":40,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFeHVKg==","node":{"number":89,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFglR-Q==","node":{"number":90,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFhqJcQ==","node":{"number":91,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFh-yYA==","node":{"number":92,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"没必要每次都排序，最开始/最后排序一次即可。","author":{"login":"hcsp-bot"},"commit":{"oid":"057362126b70aaa1e5c06e6dd19281570ed33c16"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"}]}}}]},"line":21,"originalLine":21,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFiIWLQ==","node":{"number":93,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFiic8g==","node":{"number":94,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFjEtBA==","node":{"number":95,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFjy2Zw==","node":{"number":96,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFj3R6w==","node":{"number":97,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"是的！！非常好！！！","author":{"login":"hcsp-bot"},"commit":{"oid":"8ae8ca5f9c542a2933f9df1123b858742ee6266e"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":14,"originalLine":14,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFlkH7w==","node":{"number":98,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"这个思路有点古怪，稍微有点绕，我来解释一下：\r\n\r\n一般人会这样做：对每个用户，提取他的部门，放到List中。\r\n你的思路是：对每个部门，检查所有的用户，如果用户属于本部门，就加入进来。\r\n\r\n功能上是完全没有问题的，但是你的思路效率稍低。我们假定有100个用户，10个部门，常规的思路对每个用户循环一次，总共循环100次；你的思路对每个部门循环一次，每个部门对所有用户循环一次，一共循环10*100=1000次，所以你的算法效率稍低。","author":{"login":"hcsp-bot"},"commit":{"oid":"6a0f7ed1eec1980997f06ebc5e95a9fef7105649"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":21,"originalLine":21,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFmTNwQ==","node":{"number":99,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFmvvHQ==","node":{"number":100,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFnhbwA==","node":{"number":101,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFoE47A==","node":{"number":102,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"不用每次add的时候都排序，效率稍微有点低。最开始或者最后排序一次即可。","author":{"login":"hcsp-bot"},"commit":{"oid":"a050fcbd63a9847373c46f764b558ed3571f6268"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":20,"originalLine":20,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFpKt1g==","node":{"number":103,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFp7JAQ==","node":{"number":104,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFq84Rw==","node":{"number":105,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"你的思路是，对每个部门，我把属于我部门的人捞出来；这样带来的后果是，每个部门都要访问全部的用户，循环次数是 [部门数量*用户数量]。另外一种思路是，对每个用户，把他丢到所属部门的桶里，这样只要循环 [用户数量] 次","author":{"login":"hcsp-bot"},"commit":{"oid":"433c83a87e48d9e6b153a2609d6b81a3c87db1a4"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":26,"originalLine":26,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFsHlig==","node":{"number":106,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFsZsyQ==","node":{"number":107,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFu4u4Q==","node":{"number":108,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFvZxZA==","node":{"number":109,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFvkY4A==","node":{"number":110,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"```\r\n[ERROR] src/main/java/com/github/hcsp/collection/User.java:[1] (misc) NewlineAtEndOfFile: File does not end with a newline.\r\n```\r\n\r\n文件的结尾应该有一个换行符（即将光标移动到最后一行按回车），可以自己搜索一下，为什么有这个限制。","author":{"login":"blindpirate"},"commit":{"oid":"84b6c02249dec556f75243a8e471b36cfdc983cc"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"Java读取文件在结尾用一个换行符来确定这个文件是一个完整的文件。这下才知道，受教了！","author":{"login":"nicknessii"},"commit":{"oid":"84b6c02249dec556f75243a8e471b36cfdc983cc"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":0,"originalLine":68,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"多余的空行","author":{"login":"hcsp-bot"},"commit":{"oid":"84b6c02249dec556f75243a8e471b36cfdc983cc"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":41,"originalLine":41,"originalStartLine":null,"startLine":null,"startDiffSide":null},{"comments":{"nodes":[{"body":"多余的空行","author":{"login":"hcsp-bot"},"commit":{"oid":"84b6c02249dec556f75243a8e471b36cfdc983cc"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":70,"originalLine":70,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFvrRkg==","node":{"number":111,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"转换一下思路：你的思路是，对每个部门，我把属于我部门的人捞出来；这样带来的后果是，每个部门都要访问全部的用户，循环次数是 [部门数量*用户数量]。另外一种思路是，对每个用户，把他丢到所属部门的桶里，这样只要循环 [用户数量] 次","author":{"login":"hcsp-bot"},"commit":{"oid":"d0b0b5409cc2e7d7e14ae77c5affd2136f6fd762"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":14,"originalLine":14,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFwAXsA==","node":{"number":112,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFxnUBw==","node":{"number":113,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFxrvSg==","node":{"number":114,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFx3jFA==","node":{"number":115,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"转换一下思路：你的思路是，对每个部门，我把属于我部门的人捞出来；这样带来的后果是，每个部门都要访问全部的用户，循环次数是 [部门数量*用户数量]。另外一种思路是，对每个用户，把他丢到所属部门的桶里，这样只要循环 [用户数量] 次","author":{"login":"hcsp-bot"},"commit":{"oid":"3d9ae7abe33613c6b6cab709b08b4d00d81dc89d"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}},{"body":"是的，其实我写的时候就感觉不对劲，但脑袋有点晕乎乎的了","author":{"login":"sun1341283"},"commit":{"oid":"3d9ae7abe33613c6b6cab709b08b4d00d81dc89d"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":16,"originalLine":16,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFyvLEw==","node":{"number":116,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOFy6Kdw==","node":{"number":117,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"对每个用户新建了一个 ArrayList，但是其中有很多是用不到的，白白浪费空间和时间。","author":{"login":"hcsp-bot"},"commit":{"oid":"13ee9eb98d45aba44f67fe3304f808a55eec947b"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":17,"originalLine":17,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF0NgOw==","node":{"number":118,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF0Ny5g==","node":{"number":119,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF14dpQ==","node":{"number":120,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF3bHzQ==","node":{"number":121,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"转换一下思路：你的思路是，对每个部门，我把属于我部门的人捞出来；这样带来的后果是，每个部门都要访问全部的用户，循环次数是 [部门数量*用户数量]。另外一种思路是，对每个用户，把他丢到所属部门的桶里，这样只要循环 [用户数量] 次","author":{"login":"hcsp-bot"},"commit":{"oid":"065b201bdcdede5a54ef85cc6d160688a1299276"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":13,"originalLine":13,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF44mfQ==","node":{"number":122,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOF8BUhA==","node":{"number":123,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"请养成写完代码按一下格式化快捷键将代码格式化的习惯，如果不知道怎么做或者找不到快捷键在哪儿请来问我。\r\n\r\n另外这里可以用`Integer.compare()`。","author":{"login":"hcsp-bot"},"commit":{"oid":"10816cb98ad466a94ac2aa290b92243c46b5d1df"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":62,"originalLine":62,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGBFeqA==","node":{"number":124,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGD4dxQ==","node":{"number":125,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGFkWGQ==","node":{"number":126,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGF97gw==","node":{"number":127,"reviewThreads":{"nodes":[{"comments":{"nodes":[{"body":"Java的命名约定是变量小写字母开头，驼峰形式。","author":{"login":"hcsp-bot"},"commit":{"oid":"b916dc72119a00bb4f665955da0d3dff219c372b"},"pullRequest":{"files":{"nodes":[{"path":"src/main/java/com/github/hcsp/collection/Main.java"},{"path":"src/main/java/com/github/hcsp/collection/User.java"}]}}}]},"line":20,"originalLine":20,"originalStartLine":null,"startLine":null,"startDiffSide":null}]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGGHNUw==","node":{"number":128,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGGZc_A==","node":{"number":129,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGHcenA==","node":{"number":130,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGJSTLw==","node":{"number":131,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGLd69w==","node":{"number":132,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGLfIaQ==","node":{"number":133,"reviewThreads":{"nodes":[]},"headRepository":null}},{"cursor":"Y3Vyc29yOnYyOpHOGLgPlQ==","node":{"number":134,"reviewThreads":{"nodes":[]},"headRepository":null}}]
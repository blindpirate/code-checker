diff --git a/.github/workflows/ReviewDog.yml b/.github/workflows/ReviewDog.yml
new file mode 100644
index 000000000000..e2cb21d270e4
--- /dev/null
+++ b/.github/workflows/ReviewDog.yml
@@ -0,0 +1,35 @@
+name: ReviewDog
+
+on: [pull_request, push]
+
+jobs:
+    test:
+        runs-on: ubuntu-latest
+        steps:
+            - uses: actions/checkout@v2
+            - uses: joschi/setup-jdk@v1
+              with:
+                java-version: 'openjdk11'
+            - name: Cache node modules
+              uses: actions/cache@v1
+              env:
+                cache-name: cache-gradle-user-home
+              with:
+                path: ~/.gradle
+                key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/*.gradle.kts') }}
+                restore-keys: |
+                  ${{ runner.os }}-${{ env.cache-name }}-
+                  ${{ runner.os }}-
+            - name: Show Gradle version
+              run: ./gradlew --version
+            - name: Increase inotify
+              run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
+            - name: Install reviewdog
+              run: curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s
+            - name: Run reviewdog
+              env:
+                REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
+              run: |
+                  cat test-checkstyle-output.xml | ./bin/reviewdog -f=checkstyle -reporter=github-pr-check
+
+
diff --git a/.github/workflows/sanityCheck.yml2 b/.github/workflows/sanityCheck.yml2
new file mode 100644
index 000000000000..ab69b03db95d
--- /dev/null
+++ b/.github/workflows/sanityCheck.yml2
@@ -0,0 +1,34 @@
+name: SanityCheck
+
+on: [pull_request]
+
+jobs:
+    test:
+        runs-on: ubuntu-latest
+        steps:
+            - uses: actions/checkout@v2
+            - uses: joschi/setup-jdk@v1
+              with:
+                java-version: 'openjdk11'
+            - name: Cache node modules
+              uses: actions/cache@v1
+              env:
+                cache-name: cache-gradle-user-home
+              with:
+                path: ~/.gradle
+                key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/*.gradle.kts') }}
+                restore-keys: |
+                  ${{ runner.os }}-${{ env.cache-name }}-
+                  ${{ runner.os }}-
+            - name: Show Gradle version
+              run: ./gradlew --version
+            - name: Increase inotify
+              run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
+            - name: Sanity Check
+              run: ./gradlew --init-script gradle/init-scripts/build-scan.init.gradle.kts --build-cache -Dgradle.cache.remote.url=${{ secrets.GRADLE_CACHE_REMOTE_URL }} -Dgradle.cache.remote.username=gradle1 -Dgradle.cache.remote.password=${{ secrets.GRADLE_CACHE_REMOTE_PASSWORD }} -Dscan.tag.Check -Dscan.tag.QuickFeedbackLinuxOnly sanityCheck
+              env:
+                JAVA_TOOL_OPTIONS: -Dhttps.protocols=TLSv1.2
+                CI: 1
+                GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
+
+
diff --git a/buildSrc/subprojects/buildquality/src/main/kotlin/org/gradle/gradlebuild/buildquality/quick/QuickCheck.kt b/buildSrc/subprojects/buildquality/src/main/kotlin/org/gradle/gradlebuild/buildquality/quick/QuickCheck.kt
index c8793d04a85b..99634adcf91a 100644
--- a/buildSrc/subprojects/buildquality/src/main/kotlin/org/gradle/gradlebuild/buildquality/quick/QuickCheck.kt
+++ b/buildSrc/subprojects/buildquality/src/main/kotlin/org/gradle/gradlebuild/buildquality/quick/QuickCheck.kt
@@ -29,6 +29,9 @@ import java.util.concurrent.Callable
 
 class QuickCheckPlugin : Plugin<Project> {
     override fun apply(project: Project) {
+        project.repositories {
+            mavenCentral()
+        }
         project.tasks.register<QuickCheckTask>("quickCheck")
     }
 }
@@ -78,6 +81,8 @@ enum class Check(private val extension: String) {
                 args("-c")
                 args("config/checkstyle/checkstyle.xml")
                 filesToBeChecked.forEach { args(it) }
+                args("-f")
+                args("xml")
                 jvmArgs("-Dconfig_loc=config/checkstyle")
                 classpath = project.configurations["quickCheck"]
                 systemProperty("config_location", "config/checkstyle")
diff --git a/subprojects/core-api/src/main/java/org/gradle/api/Project.java b/subprojects/core-api/src/main/java/org/gradle/api/Project.java
index 9765c2bf5582..b33782383e03 100644
--- a/subprojects/core-api/src/main/java/org/gradle/api/Project.java
+++ b/subprojects/core-api/src/main/java/org/gradle/api/Project.java
@@ -49,6 +49,7 @@
 import org.gradle.process.ExecResult;
 import org.gradle.process.ExecSpec;
 import org.gradle.process.JavaExecSpec;
+import java.util.concurrent.ConcurrentHashMap;
 
 import javax.annotation.Nullable;
 import java.io.File;
diff --git a/test-checkstyle-output.xml b/test-checkstyle-output.xml
new file mode 100644
index 000000000000..4abb5f265511
--- /dev/null
+++ b/test-checkstyle-output.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+Checkstyle ends with 1 errors.
+<checkstyle version="8.28">
+<file name="subprojects/core-api/src/main/java/org/gradle/api/Project.java">
+<error line="52" column="8" severity="error" message="Unused import - java.util.concurrent.ConcurrentHashMap." source="com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"/>
+</file>
+</checkstyle>
+
